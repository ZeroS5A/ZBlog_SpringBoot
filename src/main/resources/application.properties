#调整默认log的输出级别
logging.level.com = DEBUG

#输出文件路径
# logging.path = D://log.txt

#输出格式
#logging.pattern.console = %d{yyyy-MM-dd}
#====================================================================================
server.port=8081
server.context-path=/MyBlog

# 上传文件总的最大值
spring.servlet.multipart.max-request-size=10MB
# 单个文件的最大值
spring.servlet.multipart.max-file-size=10MB

#数据库链接配置=======================================================================

spring.datasource.url=jdbc:mysql://localhost:3306/db_blog?serverTimezone=GMT%2B8

spring.datasource.username=root
spring.datasource.password=123456

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;
druid.stat.slowSqlMillis=5000 

#分页插件============================================================================
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true

#邮件配置===========================================================================

spring.mail.default-encoding= UTF-8
spring.mail.host = smtp.126.com
spring.mail.username= "ZBlog2020@126.com"
spring.mail.password= "IBLVQUMKCJTCFDQY"

#设置ssl认证
spring.mail.properties.mail.smtp.ssl.enable=true
# 设置TLS认证
#spring.mail.properties.mail.smtp.starttls.required=true

#RocketMQ配置=======================================================================

#发送同一类消息的设置为同一个group，保证唯一,默认不需要设置，rocketmq会使用ip@pid(pid代表jvm名字)作为唯一标示
rocketmq.groupName=ZBlog
#是否开启自动配置
rocketmq.isEnable=true
#mq的nameserver地址
rocketmq.namesrvAddr=127.0.0.1:9876
#消息最大长度 默认1024*4(4M)
rocketmq.producer.maxMessageSize=4096
#发送消息超时时间,默认3000
rocketmq.producer.sendMsgTimeout=3000
#发送消息失败重试次数，默认2
rocketmq.producer.retryTimesWhenSendFailed=2
#消费者线程数量
rocketmq.consumer.consumeThreadMin=5
rocketmq.consumer.consumeThreadMax=32
#设置一次消费消息的条数，默认为1条
rocketmq.consumer.consumeMessageBatchMaxSize=1

#===================================================================================
#自动创建数据库测试
#spring.datasource.schema=classpath:SQL/test.sql

#===================================================================================